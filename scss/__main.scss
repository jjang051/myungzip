@import "vars";


$cube-width:80px;
#main {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    //두줄이상일때 어떻게 처리할건가....
    .mainBox {
        width:$cube-width*21+16;
        display: flex;
        justify-content: start;
        align-items: center;
        height: 100vh;
        flex-wrap:wrap;
        align-content:center;
    }
    .cubeBox {
        width:$cube-width;
        height:$cube-width;
        position: relative;
        margin-left:1px;
        margin-bottom: 1px;
        flex-basis: $cube-width;
        //flex:0 0 $cube-width;
        
        perspective: $cube-width*2;// 숫자가 클수록 소실점이 멀어지므로 왜곡의 정도가 약해짐.
        .cube {
            position: absolute;
            width:100%;
            height: 100%;
            transform-style: preserve-3d;
            transform:translateZ(-$cube-width/2);
            .face {
                position: absolute;
                width:100%;
                height: 100%;
                overflow: hidden;
                color:#fff;
                font-size: 32px;
                text-transform: uppercase;
                font-weight: 300;
                //background-color: #000;
                display: flex;
                justify-content: center;
                align-items: center;
                
                &.front {background-color:   rgb(241, 26, 26); transform:rotateY(0deg) translateZ($cube-width/2);
                    @include longShadow(darken(rgb(241, 26, 26),10),right,50);
                }
                &.back {background-color:    rgb(235, 153, 3); transform:rotateY(180deg) translateZ($cube-width/2);
                    @include longShadow(darken(rgb(235, 153, 3),10),right,50);
                }
                &.right {background-color:   rgb(9, 197, 2); transform:rotateY(90deg) translateZ($cube-width/2);
                    @include longShadow(darken(rgb(9, 197, 2),10),right,50);
                }
                &.left {background-color:    rgb(1, 198, 212); transform:rotateY(-90deg) translateZ($cube-width/2);
                    @include longShadow(darken(rgb(1, 198, 212),10),right,50);
                }
                &.top {background-color:     rgb(3, 70, 194); transform:rotateX(90deg) translateZ($cube-width/2);
                    @include longShadow(darken(rgb(3, 70, 194),10),right,50);
                }
                &.bottom {background-color:  rgb(189, 5, 226); transform:rotateX(-90deg) translateZ($cube-width/2);
                    @include longShadow(darken(rgb(189, 5, 226),10),right,50);
                }
            }
        }
    }
}

.nav {
    position: fixed;
    bottom: 50px;
    width:100%;
    ul {
        display: flex;
        justify-content: center;
        li {
            width:10px;
            height: 10px;
            display: flex;
            justify-content: center;
            align-items:center;
            color:#fff;
            background-color: #fff;
            text-transform: uppercase;
            margin: 0 2px;
            border-radius: 100%;
            cursor: pointer;
            user-select: none;
            &.on {
                background-color: #f00;
            }
        }
    }
}